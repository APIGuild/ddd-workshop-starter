apply plugin: 'jacoco'

def excludeFiles = [
        '**/Application*',
        '**/configuration/**',
        '**/exception/**',
        '**/utils/**',
        '**/controller/**',
        '**/repository/**'
]

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: excludeFiles)
        })
    }
}

jacocoTestCoverageVerification {
    violationRules {
        afterEvaluate {
            classDirectories = files(classDirectories.files.collect {
                fileTree(dir: it, exclude: excludeFiles)
            })
        }
        rule {
            element "CLASS"

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.1
            }

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.1
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport
tasks.withType(Test) { test ->
    jacocoTestReport.dependsOn test
}